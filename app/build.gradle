plugins {
  id("com.android.application")
  id("org.jetbrains.kotlin.android")
}

kotlin {
  jvmToolchain {
    languageVersion.set(JavaLanguageVersion.of(11))
  }
}

android {
  namespace "com.vanniktech.textbuilder.sample"

  compileSdk libs.versions.compileSdk.get() as int

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }

  defaultConfig {
    applicationId "com.vanniktech.textbuilder.sample"
    minSdkVersion libs.versions.minSdk.get()
    targetSdkVersion libs.versions.targetSdk.get()
    versionCode 1
    versionName "0.1.0"
  }

  def shouldSign = project.hasProperty('RELEASE_STORE_FILE') &&
      project.hasProperty('RELEASE_STORE_PASSWORD') &&
      project.hasProperty('RELEASE_KEY_ALIAS') &&
      project.hasProperty('RELEASE_KEY_PASSWORD')

  if (shouldSign) {
    signingConfigs {
      release {
        // http://stackoverflow.com/a/21020469/1979703
        storeFile file(RELEASE_STORE_FILE)
        storePassword RELEASE_STORE_PASSWORD
        keyAlias RELEASE_KEY_ALIAS
        keyPassword RELEASE_KEY_PASSWORD
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      shrinkResources true
      zipAlignEnabled true

      if (shouldSign) {
        signingConfig signingConfigs.release
      }
    }
  }
}

dependencies {
  implementation(libs.material)

  implementation(project(':library'))
}
